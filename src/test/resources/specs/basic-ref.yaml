openapi: 3.0.3
info:
  title: Basic Examples
  description: This is a basic sample aos file for the model generator
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: example
    description: Example Tag 1
    externalDocs:
      description: Find out more
      url: 'http://example.io'
  - name: example_2
    description: Example Tag 2
  - name: example_3
    description: Example Tag 3
    externalDocs:
      description: Find out more about example tag 3
      url: 'http://example3.io'
paths:
  /records:
    get:
      tags:
        - example
      summary: Get All Records
      description: Get All Records
      operationId: getAllRecords
      parameters:
        - name: category
          in: query
          description: Category Filter
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - category_1
                - category_2
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                title: GetAllRecordsSuccessResponse
                description: successful Operation
                items:
                  $ref: '#/components/schemas/record'
                example:
                  - id: 1
                    name: record1
                    category: category_1
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /record/{id}:
    get:
      tags:
        - example_2
      summary: Find Record by Id
      description: Find Record by Id
      operationId: getRecord
      parameters:
        - name: recordId
          in: path
          description: ID of record to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /record:
    put:
      tags:
        - example_3
      summary: Create New Identified Record
      description: Create New Record With Id
      operationId: putNewRecord
      parameters: []
      requestBody:
        description: Record to add to the system
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/record'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - example_3
      summary: Create New Record Without Id
      description: Create New Record Without Id
      parameters: []
      requestBody:
        description: Record to add to the system
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/record'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/record'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    error:
      type: "object"
      properties:
        code:
          type: "integer"
        details:
          type: string
          description: Error details
    record:
      type: object
      description: Single Record Description
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: type_name
        category:
          type: string
          description: Category Enum
          enum:
            - category_1
            - category_2
      example:
        id: 1
        name: record
        category: category_1

